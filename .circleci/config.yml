#version: 2.1
#
#commands:
#  install_macos_deps:
#    steps:
#      - run:
#          name: Install dependencies with Homebrew
#          command: |
#            export HOMEBREW_NO_AUTO_UPDATE=1
#            brew install cmake
#            brew install opencv
#            brew install glfw3
#            brew install tbb
#            brew install capnp
#
#  install_linux_deps:
#    steps:
#      - run:
#          name: Install eCAL dependency
#          command: |
#            sudo add-apt-repository -y ppa:ecal/ecal-5.11
#            sudo apt-get update
#            sudo apt-get install ecal
#      - run:
#          name: Install Eigen3 dependency
#          command: |
#            sudo apt-get install libeigen3-dev
#      - run:
#          name: Install dependencies with apt-get
#          command: |
#            sudo apt-get update
#            sudo apt-get install -y libopencv-dev
#            sudo apt-get install -y libglfw3-dev
#            sudo apt-get install -y libtbb-dev
#            sudo apt-get install -y capnproto
#            sudo apt-get install -y libgtk-3-dev
#
#  build_linux:
#    steps:
#      - checkout
#      - run:
#          name: calibration_tool submodule update
#          command: git submodule update --init --recursive
#      - run:
#          name: Build Application
#          command: |
#              mkdir build
#              cd build
#              cmake ..
#              cmake --build . -j8
#      - run:
#          name: Compress Executable for Storage
#          command: tar -czvf executable.tar.gz build/*
#      - store_artifacts:  # store the compressed executable as a build artifact
#          path: executable.tar.gz
#          destination: executable
#
#jobs:
#  build:
#    macos:
#      xcode: 14.2.0
#    steps:
#      - checkout
#      - run:
#          name: calibration_tool submodule update
#          command: git submodule update --init --recursive
#      - run:
#          name: Install Dependencies
#          command: |
#            export HOMEBREW_NO_AUTO_UPDATE=1
#            brew install cmake
#            brew install opencv
#            brew install glfw3
#            brew install tbb
#            brew install capnp
#      - run:
#          name: Build Application
#          command: |
#            mkdir build
#            cd build
#            cmake ..
#            cmake --build . -j8
#      - run:
#          name: Compress Executable for Storage
#          command: tar -czvf executable.tar.gz build/calibration_tool.app
#      - store_artifacts:  # store the compressed executable as a build artifact
#          path: executable.tar.gz
#          destination: executable
#
#executors:
#  ubuntu2204-amd64: &ubuntu2204-amd64-executor
#    machine:
#      image: ubuntu-2204:current
#    resource_class: medium
#    working_directory: ~/git
#  ubuntu2204-arm64: &ubuntu2204-arm64-executor
#    machine:
#      image: ubuntu-2204:current
#    resource_class: arm.medium
#    working_directory: ~/git
#  ubuntu2004-amd64: &ubuntu2004-amd64-executor
#    machine:
#      image: ubuntu-2004:current
#    resource_class: medium
#    working_directory: ~/git
#  ubuntu2004-arm64: &ubuntu2004-arm64-executor
#    machine:
#      image: ubuntu-2004:current
#    resource_class: arm.medium
#    working_directory: ~/git
#
##workflows:
##  build_app:
##    jobs:
##      - build
#
#workflows:
#  ubuntu2204-amd64:
#    jobs:
#      - build-capnproto:
#          os: ubuntu2204-amd64
#          context:
#            - amd64
#            - ubuntu2204
#      - build-depthai-core:
#          os: ubuntu2204-amd64
#          context:
#            - amd64
#            - ubuntu2204
#      - build-apriltag:
#          os: ubuntu2204-amd64
#          context:
#            - amd64
#            - ubuntu2204
#      - build-vk-camera-driver:
#          os: ubuntu2204-amd64
#          context:
#            - amd64
#            - ubuntu2204
#          requires:
#            - build-capnproto
#            - build-depthai-core
#  ubuntu2204-arm64:
#    jobs:
#      - build-capnproto:
#          os: ubuntu2204-arm64
#          context:
#            - arm64
#            - ubuntu2204
#      - build-depthai-core:
#          os: ubuntu2204-arm64
#          context:
#            - arm64
#            - ubuntu2204
#      - build-apriltag:
#          os: ubuntu2204-arm64
#          context:
#            - arm64
#            - ubuntu2204
#      - build-vk-camera-driver:
#          os: ubuntu2204-arm64
#          context:
#            - arm64
#            - ubuntu2204
#          requires:
#            - build-capnproto
#            - build-depthai-core

version: 2.1

jobs:
  build:
    docker:
      - image: ubuntu2204-amd64
    steps:
      - checkout
      - run:
          name: Update Submodules
          command: |
            git submodule update --init --recursive
      - run:
          name: Install Dependencies
          command: |
            apt-get update
            apt-get install -y cmake libopencv-dev libglfw3-dev libtbb-dev libgtk-3-dev
      - run:
          name: Build Application
          command: |
            mkdir build
            cd build
            cmake ..
            cmake --build . -j8
      - run:
          name: Compress Executable for Storage
          command: tar -czvf executable.tar.gz build/*
      - store_artifacts:  # store the compressed executable as a build artifact
          path: executable.tar.gz
          destination: executable

workflows:
  build_app:
    jobs:
      - build
